{"version":3,"sources":["api.js","components/Search.js","App.js","reportWebVitals.js","index.js"],"names":["api","baseUrl","headers","this","_baseUrl","_headers","endPoint","method","body","fetch","then","res","ok","json","console","log","err","Promise","reject","status","query","_makeRequest","Search","props","useState","setQuery","result","setResult","className","type","onChange","e","target","value","getPoem","response","catch","map","poem","queryElem","style","color","textArray","fields","text","split","index","findIndex","line","includes","ind","indexOf","slice","length","App","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"qPAoCeA,EAPH,I,WA5BV,cAAiC,IAApBC,EAAmB,EAAnBA,QAASC,EAAU,EAAVA,QAAU,oBAC9BC,KAAKC,SAAWH,EAChBE,KAAKE,SAAWH,E,yDAGLI,GAA+B,IAArBC,EAAoB,uDAAb,MAAOC,EAAM,uCACzC,OAAOC,MAAMN,KAAKC,SAAWE,EAAU,CACrCC,SACAL,QAASC,KAAKE,SACdG,SAECE,MAAK,SAAAC,GACJ,OAAIA,EAAIC,GACCD,EAAIE,QAIbC,QAAQC,IAAIJ,EAAIK,KACTC,QAAQC,OAAR,gDAA0BP,EAAIQ,e,8BAInCC,GACN,OAAOjB,KAAKkB,aAAL,cAAyBD,Q,KAKxB,CAAQ,CAClBnB,QAAS,yBACTC,QAAS,CACP,eAAgB,sBCoBLoB,G,MAhDA,SAACC,GAAW,IAAD,EACEC,mBAAS,IADX,mBACjBJ,EADiB,KACVK,EADU,OAEID,mBAAS,IAFb,mBAEjBE,EAFiB,KAETC,EAFS,KAexB,OACE,sBAAKC,UAAU,SAAf,UACE,gEACA,uBAAOC,KAAK,OAAOC,SAdvB,SAAsBC,GACpBN,EAASM,EAAEC,OAAOC,OAClBjC,EAAIkC,QAAQH,EAAEC,OAAOC,OAClBvB,MAAK,SAACyB,GACLR,EAAUQ,MAEXC,OAAM,SAACpB,GACNF,QAAQC,IAAIC,OAO6BiB,MAAOb,IAClD,qBAAKQ,UAAU,SAAf,SACKF,EAAOW,KAAI,SAACC,GACX,IAAMC,EAAY,sBAAMC,MAAO,CAACC,MAAQ,OAAtB,SAA+BrB,IAK3CsB,EAJOJ,EAAKK,OAAOC,KAIFC,MAAM,MACvBC,EAAQJ,EAAUK,WAAU,SAAAC,GAAI,QAAIA,EAAKC,SAAS7B,IAAS4B,KAC3DA,EAAON,EAAUI,GACvB,GAAIA,GAAS,EAAG,CACdhC,QAAQC,IAAI+B,GACZ,IAAMI,EAAMR,EAAUI,GAAOK,QAAQ/B,GACrC,OACE,sBAAKQ,UAAU,YAAf,UACE,wCACA,4BAAIc,EAAUI,EAAM,KACpB,8BAAIE,EAAKI,MAAM,EAAGF,GAAMX,EAAWS,EAAKI,MAAMF,EAAI9B,EAAMiC,WACxD,4BAAIX,EAAUI,EAAM,KACpB,sDC9BHQ,MARf,WACE,OACE,qBAAK1B,UAAU,MAAf,SACE,cAAC,EAAD,OCKS2B,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqB/C,MAAK,YAAkD,IAA/CgD,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCDdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BZ,M","file":"static/js/main.b7462b95.chunk.js","sourcesContent":["class Api {\n  constructor({baseUrl, headers}) {\n    this._baseUrl = baseUrl;\n    this._headers = headers;\n  }\n\n  _makeRequest(endPoint, method='GET', body) {\n    return fetch(this._baseUrl + endPoint, {\n      method,\n      headers: this._headers,\n      body\n    })\n      .then(res => {\n        if (res.ok) {\n          return res.json();\n        }\n        \n        // если ошибка, отклоняем промис\n        console.log(res.err);\n        return Promise.reject(`Ошибка: ${res.status}`);\n      });\n  }\n\n  getPoem(query) {\n    return this._makeRequest(`/?q=${query}`);\n  }\n\n}\n\nconst api = new Api({\n  baseUrl: 'https://buymebuyme.xyz',\n  headers: {\n    'Content-Type': 'application/json'\n  }\n});\n\nexport default api;","import { useState } from 'react';\nimport api from '../api';\nimport './Search.css';\n\nconst Search = (props) => {\n  const [query, setQuery] = useState('');\n  const [result, setResult] = useState([]);\n\n  function handleChange(e) {\n    setQuery(e.target.value);\n    api.getPoem(e.target.value)\n      .then((response) => {\n        setResult(response);\n      })\n      .catch((err) => {\n        console.log(err);\n      });\n  }\n\n  return (\n    <div className=\"Search\">\n      <h1>Поиск</h1>\n      <input type=\"text\" onChange={handleChange} value={query}/>\n      <div className=\"result\">\n          {result.map((poem) => {\n            const queryElem = <span style={{color : 'red'}}>{query}</span>;\n            const text = poem.fields.text;\n            // const index = text.indexOf(query);\n            // const indexStart = text.slice(0, index).lastIndexOf('\\n');\n            // const indexEnd = text.slice(index).indexOf('\\n');\n            const textArray = text.split('\\n');\n            const index = textArray.findIndex(line => line.includes(query) ? line : false);\n            const line = textArray[index];\n            if (index > -1) {\n              console.log(index);\n              const ind = textArray[index].indexOf(query);\n              return (\n                <div className=\"poem-item\">\n                  <p>.......</p>\n                  <p>{textArray[index-1]}</p>\n                  <p>{line.slice(0, ind)}{queryElem}{line.slice(ind+query.length)}</p>\n                  <p>{textArray[index+1]}</p>\n                  <p>.......</p>\n                </div>\n              )\n            }\n          })}\n      </div>      \n    </div>\n  )\n}\n\nexport default Search;","import './App.css';\nimport './components/Search';\nimport Search from './components/Search';\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <Search/>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}